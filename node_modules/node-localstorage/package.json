{
  "_args": [
    [
      {
        "raw": "node-localstorage",
        "scope": null,
        "escapedName": "node-localstorage",
        "name": "node-localstorage",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "F:\\Workspace\\Development\\PMS\\pms"
    ]
  ],
  "_from": "node-localstorage",
  "_hasShrinkwrap": false,
  "_id": "node-localstorage@2.1.6",
  "_location": "/node-localstorage",
  "_nodeVersion": "12.14.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-localstorage_2.1.6_1586559260409_0.5726439727234416"
  },
  "_npmUser": {
    "name": "lmaccherone",
    "email": "Larry@Maccherone.com"
  },
  "_npmVersion": "6.13.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-localstorage",
    "scope": null,
    "escapedName": "node-localstorage",
    "name": "node-localstorage",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/node-localstorage/-/node-localstorage-2.1.6.tgz",
  "_shasum": "7c62120beff8abbf960c858da70fddcfc336898a",
  "_shrinkwrap": null,
  "_spec": "node-localstorage",
  "_where": "F:\\Workspace\\Development\\PMS\\pms",
  "author": {
    "name": "Larry Maccherone",
    "url": "http://maccherone.com"
  },
  "bugs": {
    "url": "https://github.com/lmaccherone/node-localstorage/issues"
  },
  "dependencies": {
    "write-file-atomic": "^1.1.4"
  },
  "description": "A drop-in substitute for the browser native localStorage API that runs on node.js.",
  "devDependencies": {
    "coffeescript": "^1.12.7",
    "coffeetape": "^2.0.0",
    "lodash": "^4.17.15",
    "nyc": "^14.1.1",
    "tap-nyc": "^1.0.3",
    "tap-spec": "^5.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-yE7AycE5G2hU55d+F7Ona9nx97C+enJzWWx6jrsji7fuPZFJOvuW3X/LKKAcXRBcEIJPDOKt8ZiFWFmShR/irg==",
    "shasum": "7c62120beff8abbf960c858da70fddcfc336898a",
    "tarball": "https://registry.npmjs.org/node-localstorage/-/node-localstorage-2.1.6.tgz",
    "fileCount": 5,
    "unpackedSize": 18377,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJekPkcCRA9TVsSAnZWagAAAj4P/jqj1pK9cgy2Pp4YfK36\nREjN6TOC6GXoeUQSMWdOYQfoWWfryeJ/gopUe3IkcnDaqZarN6CH6XgeAK5Z\n3PgsBY+q4neZI4KTjKPNnkF/WxNRZKfFk/xQmODpA/g73KNtPpd/j4djgDmj\nq150hluYurKr24XdJNovC97BOy/m+WFrMAZ6jbOgyyLtp05hbrRvwLRxEd55\nN8RkUKmAZC3NglB2A6bF9ZOEqUbsLLS/TRlT0Rj/dzLKkmO1Tx5Pg/O3BOhi\nPfOKvw/UvLN9GtLsh8feFc6jxBk7/+Ll2SB7T7J0FSIl+xn8vdS6/M7rPoyn\n+J0J9nmkEJBnDUQDiPueRfPXYG/Vc56ldddmzYlSG1z/fTxGPFSL3C2o+wM7\nyADJLz50QkWTw1VB737obQZvAmMdAmJ/Zt71512ZCHDj7XmqmsB5kza8v0/q\nkYg5q2ztKdB9TbXiq2iSV2U98CwjHca5s0bHwx+0CY3wnDcURUdrbBWBfl2f\nrcNRi3D+Ex0bmXa32nGoXoDeySPmjK8UlZXwCHwmKB4RljU7P90eLPUxBrDA\nPpUxIuzBYLLymv7VT6bXStLBuazex14r7CrygQq8UQqUGKZfa8InC/RZTLkr\nn/cP3STOWl+TFRDtSlToMWSIv0+ZjM+LGgywhQ9mb93v2ccuBUgt4WZwavCi\nLsav\r\n=VwxN\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.12"
  },
  "gitHead": "f62ea7dff3896df4259cd18ee9635df921dfa01a",
  "homepage": "https://github.com/lmaccherone/node-localstorage",
  "keywords": [
    "localStorage",
    "Web Storage",
    "node.js"
  ],
  "license": "MIT",
  "main": "./LocalStorage",
  "maintainers": [
    {
      "name": "lmaccherone",
      "email": "Larry@Maccherone.com"
    }
  ],
  "name": "node-localstorage",
  "optionalDependencies": {},
  "preferGlobal": false,
  "readme": "[![build status](https://secure.travis-ci.org/lmaccherone/node-localstorage.png)](http://travis-ci.org/lmaccherone/node-localstorage)\n# node-localstorage #\n\nCopyright (c) 2012, Lawrence S. Maccherone, Jr.\n\n_A drop-in substitute for the browser native localStorage API that runs on node.js._\n\n### Fully implements the localStorage specfication including: ###\n\n* All methods in the [localStorage spec](http://www.w3.org/TR/webstorage/#storage) \n  interface including:\n  * length\n  * setItem(key, value)\n  * getItem(key)\n  * removeItem(key)\n  * key(n)\n  * clear()  \n* Serializes to disk in the location specified during instantiation\n* Supports the setting of a quota (default 5MB)\n* Events. This doesn't exactly follow the spec which states that events are NOT supposed to be emitted to the \n  browser window that took the action that triggered the event in the first place. They are only to be emitted to listeners in other browser windows. Early browser implementations actually did it this way and we don't really have the equivalent of a browser window in node.js, so we choose to implement them in the current process.\n* Associative array `localStorage['myKey'] = 'myValue'` and dot property `localStorage.myKey = 'myValue'`\n  syntax. If you are in an ES6 supported environment. Limitations:\n  * You won't be able to use keys that collide with my \"private\" (starts with \"_\" like \"_init\") properties and\n    methods.\n\n## Credits ##\n\nAuthor: [Larry Maccherone](http://maccherone.com)\n\n## Usage ##\n\n### CoffeeScript ###\n\n```coffee\nunless localStorage?\n  {LocalStorage} = require('../')  # require('node-localstorage') for you\n  localStorage = new LocalStorage('./scratch')\n\nlocalStorage.setItem('myFirstKey', 'myFirstValue')\nconsole.log(localStorage.getItem('myFirstKey'))\n# myFirstValue\n\nlocalStorage._deleteLocation()  # cleans up ./scratch created during doctest\n```\n\n### ReactJs ###\n\nOpen or create `src/setupTests.js` and add these two lines:\n\n``` JavaScript\n// /src/setupTests.js\nimport { LocalStorage } from \"node-localstorage\";\n\nglobal.localStorage = new LocalStorage('./scratch');\n```\n\n### JavaScript ###\n\n```JavaScript    \nif (typeof localStorage === \"undefined\" || localStorage === null) {\n  var LocalStorage = require('node-localstorage').LocalStorage;\n  localStorage = new LocalStorage('./scratch');\n}\n\nlocalStorage.setItem('myFirstKey', 'myFirstValue');\nconsole.log(localStorage.getItem('myFirstKey'));\n```\n\n### Polyfill on Node.js ###\n\nPolyfil your node.js environment with this as the global localStorage when launching your own code\n\n```sh\nnode -r node-localstorage/register my-code.js\n```\n\n## Installation ##\n\n`npm install node-localstorage`\n\n## Changelog ##\n\n* 2.1.6 - 2020-04-10 - Fix backward compatibility bug (thanks @WillBartee)\n* 2.1.5 - 2019-12-02 - Fixed empty string key(n) return (@appy-one, thanks for reporting)\n* 2.1.2 thru 2.1.4 - 2019-11-17 - Upgrading and testing npm publish scripts\n* 2.1.1 - 2019-11-17 - npm publish cleanup\n* 2.1.0 - 2019-11-17 - Added back dot-property and associative-array syntax using ES6 Proxy\n* 2.0.0 - 2019-11-17 - Updated all the depdendencies, added ability to register as polyfill (thanks @dy)\n* 1.3.1 - 2018-03-19 - Resolves issue #32 (thanks, plamens)\n* 1.3.0 - 2016-04-09 - **Possibly backward breaking if you were using experimental syntax** Reverted experimental\n  associative array and dot-property syntax. The API for Proxy changed with node.js v6.x which broke it. Then when\n  I switched to the new syntax, it broke the EventEmitter functionality. Will restore once I know how to fix that.\n* 1.2.0 - 2016-04-09 - Atomic writes (thanks, mvayngrib)\n* 1.1.2 - 2016-01-08 - Resolves issue #17 (thanks, evilaliv3)\n* 1.1.1 - 2016-01-04 - Smarter associative array and dot-property syntax support\n* 1.1.0 - 2016-01-03 - **Backward breaking** if you used any of the non-standard methods. They are now all preceded with\n  an underscore. Big upgrade for this version is experimental support for associative array and dot-property syntax.\n* 1.0.0 - 2016-01-03 - Fixed bug with empty string key (thanks, tinybike)\n* 0.6.0 - 2015-09-11 - Removed references to deprecated fs.existsSync() (thanks, josephbosire)\n* 0.5.2 - 2015-08-01 - Fixed defect where keys were not being updated correctly by removeItem() (thanks, ed69140)\n* 0.5.1 - 2015-06-01 - Added support for events\n* 0.5.0 - 2015-02-02 - Added JSONStorage class which allows you set and get native JSON\n* 0.4.1 - 2015-02-02 - More robust publishing/tagging (like Lumenize)\n* 0.4.0 - 2015-02-02 - Uses more efficient fs.statSync to set initial size (thanks, sudheer594)\n* 0.3.6 - 2014-12-24 - Allows usage without `new`\n* 0.3.5 - 2014-12-23 - Fixed toString() for QuotaExceededError\n* 0.3.4 - 2013-07-07 - Moved CoffeeScript to devDependencies\n* 0.3.3 - 2013-04-05 - Added support for '/' in keys by escaping before creating file names\n* 0.3.2 - 2013-01-19 - Renamed QuotaExceededError to QUOTA_EXCEEDED_ERR to match most browsers\n* 0.3.1 - 2013-01-19 - Fixed bug where it threw plain old Error instead of new QuotaExceededError\n* 0.3.0 - 2013-01-19 - Added QuotaExceededError support\n* 0.2.0 - 2013-01-03 - Added quota support\n* 0.1.2 - 2012-11-02 - Finally got Travis CI working\n* 0.1.1 - 2012-10-29 - Update to support Travis CI\n* 0.1.0 - 2012-10-29 - Original version\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/lmaccherone/node-localstorage.git"
  },
  "scripts": {
    "build": "coffee -c *.coffee",
    "coverage": "npm run build && nyc --reporter=lcov coffeetape test/*.coffee | tap-nyc",
    "coverage:report": "nyc report --reporter=text-summary",
    "postpublish": "git push --tags",
    "prepare": "coffee -c *.coffee",
    "publish:major": "npm run test && npm version major && npm publish",
    "publish:minor": "npm run test && npm version minor && npm publish",
    "publish:patch": "npm run test && npm version patch && npm publish",
    "test": "npm run build && coffeetape test/*.coffee | tap-spec"
  },
  "version": "2.1.6"
}
